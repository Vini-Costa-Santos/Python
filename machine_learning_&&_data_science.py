# -*- coding: utf-8 -*-
"""Machine_Learning_&&_Data_Science.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/ViniCostSantos/aquivos-teste/blob/main/Machine_Learning_%26%26_Data_Science.ipynb
"""

#!pip install matplotlib
#!pip install seaborn
#!pip install scikit-learn

# lembrado que os investimentos estão em milhares e as vendas em milhões
# importando a base de dados
import pandas as pd

tabela = pd.read_csv(r"C:\Users\Vinicius Costa\Desktop\Jupyter\dados\advertising.csv")

display(tabela)

# correlação dos investimentos com as vendas
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

print(tabela.corr())

# criar gráfico
#sns.barplot(x='State', y="Growth", data=df)
sns.heatmap(tabela.corr(), cmap = "Greens", annot = True)
# exibir gráfico
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

y = tabela["Vendas"]
x = tabela[["TV", "Radio", "Jornal"]]

display(x)
display(y)

# dividindo a tabela em treino e teste para a nossa IA
from sklearn.model_selection import train_test_split

x_treino, x_teste, y_treino, y_teste = train_test_split(x, y, test_size= 0.3)

# importando a inteligência artificial

from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor

# criando as IAs

modelo_regressaolinear = LinearRegression()
modelo_arvoredecisao = RandomForestRegressor()

# treinando as IAs

modelo_regressaolinear.fit(x_treino, y_treino)
modelo_arvoredecisao.fit(x_treino, y_treino)

# fazendo a previsão para os valores de teste

previsao_regressaolinear = modelo_regressaolinear.predict(x_teste)
previsao_arvoredecisao = modelo_arvoredecisao.predict(x_teste)

# testando a previsão

from sklearn.metrics import r2_score

print(r2_score(y_teste, previsao_regressaolinear))
print(r2_score(y_teste, previsao_arvoredecisao))

# vizualização gráfica das previsões

tabela_auxiliar = pd.DataFrame()
tabela_auxiliar["Y de teste"] = y_teste
tabela_auxiliar["Previsão Regressão Linear"] = previsao_regressaolinear
tabela_auxiliar["Previsão Árvore de Decisão"] = previsao_arvoredecisao

#display(tabela_auxiliar)
sns.lineplot(data=tabela_auxiliar)
plt.show()

# fazendo novas previsões
import pandas as pd
tabela_nova = pd.read_csv(r"C:\Users\Vinicius Costa\Desktop\Jupyter\dados\novos.csv")
display(tabela_nova)

previsao = modelo_arvoredecisao.predict(tabela_nova)
print(previsao)

tabela_nova["Vendas"]= previsao
display(tabela_nova)

